name: UI-Designer Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Bump Version - keep --next-patch to bump patch digit
        default: '--next-patch'
        required: true
      pushGithubRelease:
        description: true to push a github release
        required: true
        default: 'true'
      publishBinaries:
        description: true to Publish binaries
        required: true
        default: 'true'
jobs:
  getReleaseVersion:
    runs-on: ubuntu-latest
    outputs:
      releaseVersion: ${{ steps.newTagVersion.outputs.value }}
    steps:
      - name: Setup checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_UID_TOKEN }}
      - name: Get tag version
        id: newTagVersion
        shell: bash
        run: |
          if [ ${{ github.event.inputs.version }} = '--next-patch' ]
          then
              echo "##[set-output name=value;]$(echo $(./script/next-patch-version.sh))"
          else
              echo "##[set-output name=value;]$(echo ${{ github.event.inputs.version }})"
          fi
  createRelease:
    runs-on: ubuntu-latest
    needs: getReleaseVersion
    steps:
     - name: Setup checkout
       uses: actions/checkout@v2
       with:
        token: ${{ secrets.GH_UID_TOKEN }}
     - name: Repository Dispatch - create github release
       uses: peter-evans/repository-dispatch@v1
       with:
         token: ${{ secrets.GH_UID_TOKEN }}
         event-type: github-release
         client-payload: '{"releaseVersion": "${{ needs.getReleaseVersion.outputs.releaseVersion }}", "publishBinaries": "${{ github.event.inputs.publishBinaries }}"}'
#     - name: create github release
#       uses: benc-uk/workflow-dispatch@v1.1
#       with:
#         workflow: Create github Release
#         token: ${{ secrets.GH_UID_TOKEN }}
#         inputs: '{ "version": "${{ needs.getReleaseVersion.outputs.releaseVersion }}" }'
#         ref: ${{github.ref}}
#       if: ${{ github.event.inputs.pushGithubRelease == 'true' }}
#  publishBinaries:
#     runs-on: ubuntu-latest
#     needs: [getReleaseVersion,createRelease]
#     steps:
#     - name: Publish Binaries
#       uses: benc-uk/workflow-dispatch@v1.1
#       with:
#         workflow: Publish binaries
#         token: ${{ secrets.GH_UID_TOKEN }}
#         inputs: '{ "tagVersion": "${{ needs.getReleaseVersion.outputs.releaseVersion }}" }'
#         ref: ${{github.ref}}
#       if: ${{ github.event.inputs.publishBinaries == 'true' }}


