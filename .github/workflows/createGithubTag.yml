name: Create github tag
on:
  workflow_dispatch:
    inputs:
      version:
        description: Bump Version - keep --next-version to bump patch digit
        default: '--next-patch'
        required: true
jobs:
  createGithubTag:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Setup checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_RELEASE_TOKEN }}
      - name: Config git
        run: |
          git config --local user.email "testBot@users.noreply.github.com"
          git config --local user.name "ui-designer-bot"
          git config pull.rebase true
      - name: Get tag version
        id: newTagVersion
        shell: bash
        run: |
          echo ${{  github.event.inputs.version }}
          if [ ${{ github.event.inputs.version }} = '--next-patch' ]
          then
              echo "##[set-output name=value;]$(echo $(./script/next-patch-version.sh))"
          else
              echo "##[set-output name=value;]$(echo ${{ github.event.inputs.version }})"
          fi
      - name: Checkout release-branch
#       run: git checkout ${{ github.event.inputs.baseBranch }} && git pull --tags
        run: git checkout -b make-release
      - name: Update Version
        id: updateVersion
        shell: bash
        run: |
          echo ${{ steps.newTagVersion.outputs.value }}
          ./script/update-version.sh ${{ steps.newTagVersion.outputs.value }}
          git commit -a -m "release(${{ steps.newTagVersion.outputs.value }}) create release ${{ steps.newTagVersion.outputs.value }}"
          echo "git log $(git log)"
          echo "git rev-parse HEAD @~ $(git rev-parse HEAD)"
          echo "##[set-output name=lastSha;]$(echo $(git rev-parse HEAD))"
          echo "lastSha ${{ steps.updateVersion.outputs.lastSha }}"
      - name: changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          commitish: ${{ steps.updateVersion.outputs.lastSha }}
          tag_name: ${{ steps.newTagVersion.outputs.value }}
          release_name: Release ${{ steps.newTagVersion.outputs.value }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: true
#      - name: Git Tag
#        run: git tag ${{github.event.inputs.version}}
##      - name: Create a realGithub Release
#      - name: Push Release
#        run: git push --tags
