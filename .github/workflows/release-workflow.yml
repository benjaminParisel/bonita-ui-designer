# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release

on:
  workflow_dispatch:
    inputs:
      type:
        description: 'New version type [new-version | major | minor | patch]'
        required: true
        default: 'patch'

jobs:
  build:
    name: Release pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Setup checkout
        - uses: actions/checkout@v2
      - name: Checkout master
          run: git checkout master && git pull --tags
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: changelog
          uses: scottbrenner/generate-changelog-action@master
          id: Changelog
          env:
            REPO: ${{ github.repository }}
      - name: Get current Version
        shell: bash
        run: echo "##[set-output name=version;]${grep -Po -m1 '(?<=<version>).*(?=</version>)' pom.xml}
        id: current_version
      - name: get next version
        shell: bash
        run: echo "##[set-output name=version;]${  echo "${git tag -l ${echo ${{ steps.next_version.outputs.version }} | grep -P '\d{1,}\.\d{1,}' -o}.* | sort --version-sort | tail -1%.*}.$((${git tag -l ${echo ${{ steps.next_version.outputs.version }} | grep -P '\d{1,}\.\d{1,}' -o}.* | sort --version-sort | tail -1##*.}+1))"}
        id: next_version
      - name: Update Version
        shell: bash
        run: ./script/update-version.sh ${{ steps.next_version.outputs.version }}
      - name: Commit Pom update
        run: git commit -a -m "release(${{ steps.next_version.outputs.version }}) create release ${{ steps.next_version.outputs.version }}" && git tag -a ${{ steps.next_version.outputs.version }} -m "Release ${{ steps.next_version.outputs.version }}"
      - name: Push Version
        run: git push && git push --tags
